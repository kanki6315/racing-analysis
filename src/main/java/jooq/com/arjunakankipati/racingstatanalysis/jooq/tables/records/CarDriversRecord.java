/*
 * This file is generated by jOOQ.
 */
package com.arjunakankipati.racingstatanalysis.jooq.tables.records;


import com.arjunakankipati.racingstatanalysis.jooq.tables.CarDrivers;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class CarDriversRecord extends UpdatableRecordImpl<CarDriversRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.car_drivers.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.car_drivers.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.car_drivers.driver_id</code>.
     */
    public void setDriverId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.car_drivers.driver_id</code>.
     */
    public Long getDriverId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.car_drivers.driver_number</code>.
     */
    public void setDriverNumber(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.car_drivers.driver_number</code>.
     */
    public Integer getDriverNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.car_drivers.car_id</code>.
     */
    public void setCarId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.car_drivers.car_id</code>.
     */
    public Long getCarId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CarDriversRecord
     */
    public CarDriversRecord() {
        super(CarDrivers.CAR_DRIVERS);
    }

    /**
     * Create a detached, initialised CarDriversRecord
     */
    public CarDriversRecord(Long id, Long driverId, Integer driverNumber, Long carId) {
        super(CarDrivers.CAR_DRIVERS);

        setId(id);
        setDriverId(driverId);
        setDriverNumber(driverNumber);
        setCarId(carId);
        resetChangedOnNotNull();
    }
}
