/*
 * This file is generated by jOOQ.
 */
package com.arjunakankipati.racingstatanalysis.jooq.tables.records;


import com.arjunakankipati.racingstatanalysis.jooq.tables.Laps;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LapsRecord extends UpdatableRecordImpl<LapsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.laps.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.laps.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.laps.driver_id</code>.
     */
    public void setDriverId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.laps.driver_id</code>.
     */
    public Long getDriverId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.laps.lap_number</code>.
     */
    public void setLapNumber(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.laps.lap_number</code>.
     */
    public Integer getLapNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.laps.lap_time_seconds</code>.
     */
    public void setLapTimeSeconds(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.laps.lap_time_seconds</code>.
     */
    public BigDecimal getLapTimeSeconds() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.laps.session_elapsed_seconds</code>.
     */
    public void setSessionElapsedSeconds(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.laps.session_elapsed_seconds</code>.
     */
    public BigDecimal getSessionElapsedSeconds() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.laps.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.laps.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.laps.average_speed_kph</code>.
     */
    public void setAverageSpeedKph(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.laps.average_speed_kph</code>.
     */
    public BigDecimal getAverageSpeedKph() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.laps.car_id</code>.
     */
    public void setCarId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.laps.car_id</code>.
     */
    public Long getCarId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LapsRecord
     */
    public LapsRecord() {
        super(Laps.LAPS);
    }

    /**
     * Create a detached, initialised LapsRecord
     */
    public LapsRecord(Long id, Long driverId, Integer lapNumber, BigDecimal lapTimeSeconds, BigDecimal sessionElapsedSeconds, LocalDateTime timestamp, BigDecimal averageSpeedKph, Long carId) {
        super(Laps.LAPS);

        setId(id);
        setDriverId(driverId);
        setLapNumber(lapNumber);
        setLapTimeSeconds(lapTimeSeconds);
        setSessionElapsedSeconds(sessionElapsedSeconds);
        setTimestamp(timestamp);
        setAverageSpeedKph(averageSpeedKph);
        setCarId(carId);
        resetChangedOnNotNull();
    }
}
